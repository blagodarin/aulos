language: cpp

git:
  depth: 1

matrix:
  include:

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Release
      addons: &gcc_addons
        apt:
          packages:
            - alsa-utils
            - g++-10
            - libasound2-dev
            - ninja-build
            - qtbase5-dev
            - qtmultimedia5-dev

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Debug SANITIZERS=1
      addons: *gcc_addons

    - os: linux
      dist: focal
      compiler: gcc
      env: GCC=10 CONFIG=Debug COVERAGE=1
      addons: *gcc_addons

    - os: linux
      dist: focal
      compiler: clang
      env: CLANG=11 CONFIG=Release
      addons: &clang_addons
        apt:
          packages:
            - alsa-utils
            - clang-11
            - libasound2-dev
            - libstdc++-10-dev
            - ninja-build
            - qtbase5-dev
            - qtmultimedia5-dev

    - os: linux
      dist: focal
      compiler: clang
      env: CLANG=11 CONFIG=Debug SANITIZERS=1
      addons: *clang_addons

before_install:
  - if [ -n "${CLANG}" ]; then export CXX=clang++-${CLANG}; fi
  - if [ -n "${GCC}" ]; then export CXX=g++-${GCC}; fi
  - ${CXX} --version
  - cmake --version
  - sudo tests/setup_travis_audio.sh

install:
  - if [ -n "${SANITIZERS}" ]; then export CXXFLAGS="-fsanitize=address -fsanitize=undefined"; fi
  - if [ -n "${SANITIZERS}" ]; then export LDFLAGS="-fsanitize=address -fsanitize=undefined"; fi
  - if [ -n "${COVERAGE}" ]; then export CXXFLAGS="--coverage"; fi
  - if [ -n "${COVERAGE}" ]; then export LDFLAGS="--coverage"; fi
  - if [ -n "${COVERAGE}" ]; then pip install --user codecov; fi

script:
  - mkdir "${HOME}/aulos.build" && pushd "${HOME}/aulos.build"
  - if [ -z "${COVERAGE}" ]; then CMAKEFLAGS="-DWITH_BENCHMARK=ON -DWITH_STANDALONE=ON -DWITH_STUDIO=ON"; fi
  - cmake ${TRAVIS_BUILD_DIR} -G Ninja -DCMAKE_BUILD_TYPE=${CONFIG} -DCMAKE_INSTALL_PREFIX="${HOME}/aulos.install" -DQT_VERSION=5 -DWITH_AULOSPLAY=ON -DWITH_TESTS=ON ${CMAKEFLAGS}
  - TERM=dumb cmake --build .
  - ctest --verbose
  - TERM=dumb cmake --build . --target install
  - popd

after_success:
  - if [ -n "${COVERAGE}" ]; then codecov --gcov-root "${HOME}/aulos.build" --gcov-exec gcov-${GCC} --gcov-args "-s `pwd`"; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/czardas.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/frere_jacques.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/fur_elise.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/grande_valse_brillante.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/hungarian_dance.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/prelude_in_c_minor.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/prelude_in_g_minor.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/synth_1.aulos; fi
  - if [ -z "${COVERAGE}" ] && [ -z "${SANITIZERS}" ]; then ${HOME}/aulos.install/bin/aulos_benchmark ${TRAVIS_BUILD_DIR}/examples/turkish_march.aulos; fi

notifications:
  email: false
